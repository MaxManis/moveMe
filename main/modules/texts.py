codesText = [
    'if (!expenseFromDB) { response.sendStatus(404); return; } response.statusCode = 200; response.json(expenseFromDB)',
    'try { const expenseFromDB = await Expenses.findOne({ where: {id: +expenseId}})} catch (e) {response.sendStatus(500)};',
    'const getOneExpense = async(request, response) => {const { expenseId } = request.params;}',
    'if (params.from && params.to) { searchBy.push({ spentat: { [Op.between]: [6, 10] } }); }',
    'const expensesFromDB = await Expenses.findAll(qweryDBsettings); response.statusCode = 200; response.json(expensesFromDB);',
    'if (params.userid || params.category || params.to) { qweryDBsettings.where = {[Op.or]: searchBy}}',
    'if (params.category) { searchBy.push({ category: params.category }); }',
    'if (params.userid) { searchBy.push({ userid: params.userid }); }',
    'const params = request.query; const searchBy = []; const qweryDBsettings = {order: [[\'id\', \'ASC\']]};',
    'const getAllExpenses = async(request, response) => {try { const x = 0; } catch (e) { response.sendStatus(500); }};'
]
texts = [
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
    " Nulla sapien mi, porta a arcu eget, congue molestie lectus",
    " Nam elementum a felis vel commodo",
    " Ut ac est mollis, eleifend augue non, rhoncus risus",
    " Nullam faucibus velit ac lacus mattis accumsan",
    " Proin vel molestie quam",
    " Proin pellentesque commodo mattis",
    " In sit amet eros sem",
    "Aliquam erat volutpat",
    " Quisque mauris justo, lobortis sed tristique id, interdum a risus",
    " Aenean nec dui placerat, porta ante a, convallis nibh",
    " Duis ac pharetra est, sit amet imperdiet lacus",
    " Nam accumsan sodales sodales",
    " Ut sapien justo, lobortis quis mollis id, ullamcorper eu augue",
    " Morbi quis cursus dolor, ultrices suscipit lacus",
    " Pellentesque facilisis pulvinar nulla tincidunt venenatis",
    " Integer placerat sagittis ex quis faucibus",
    " Donec quam justo, porttitor sit amet consectetur in, tempus eu metus",
    " Aliquam ac nunc sed mi facilisis posuere sed a ante",
    " Nulla semper elit id ligula sagittis ornare",
    " Vivamus vel orci porttitor, malesuada tellus id, ultricies nisl",
    " Maecenas commodo magna at nulla eleifend, et luctus enim hendrerit",
    "Sed tincidunt diam tempor elit sollicitudin, scelerisque accumsan urna rhoncus",
    " Vivamus in eros interdum, commodo dolor non, commodo nisi",
    " Vestibulum euismod gravida arcu, quis eleifend magna rhoncus non",
    " Donec laoreet, risus non tincidunt pellentesque, enim turpis elementum ligula, eu lobortis eros mauris eu lacus",
    " Nunc efficitur luctus magna, vitae pretium enim feugiat eget",
    " Maecenas fringilla cursus nulla id pharetra",
    " Nullam augue leo, tincidunt vitae elementum consequat, dignissim ut lectus",
    " Fusce luctus nisl lectus, at egestas urna lobortis et",
    " Quisque cursus maximus orci",
    " Sed et lacinia ligula",
    " Cras faucibus massa sem, ac suscipit metus rutrum vitae",
    " Vestibulum consequat nunc in odio hendrerit consequat",
    "Nullam at mi nec lectus scelerisque dictum",
    " Aliquam lobortis non lacus vel varius",
    " In tortor ante, tempus nec risus non, ullamcorper ornare enim",
    " Aenean id porta orci",
    " Duis pellentesque viverra ultrices",
    " Integer nec consectetur est",
    " Ut euismod enim arcu, efficitur scelerisque sem feugiat in",
    " Morbi vitae eleifend sapien",
    " Nullam sit amet sapien non justo dapibus ullamcorper at quis augue",
    " Phasellus non sapien sollicitudin, condimentum enim sed, imperdiet ante",
    "Nunc nec fermentum eros, sit amet ultricies nisi",
    " Aliquam bibendum bibendum nisi, eu tincidunt ante ultricies quis",
    " Nullam a ante ac quam venenatis mattis",
    " Praesent et vestibulum metus",
    " Proin mollis tempor tortor sit amet suscipit",
    " Donec porttitor, felis lobortis efficitur blandit, diam tortor suscipit urna, ut commodo purus velit ac sem",
    " In magna neque, maximus at odio at, egestas lacinia mi",
    " Vestibulum elementum convallis metus, sed viverra purus ultricies vitae",
    " Suspendisse pulvinar, odio ut faucibus porta, risus orci bibendum diam, id tempus dolor tortor et nisl",
    " Donec feugiat ipsum eu felis consectetur, at pellentesque dolor luctus",
    " Nullam sodales quam metus, id accumsan lectus dignissim aliquet",
    " Praesent dignissim malesuada justo, in convallis ipsum",
    " Sed malesuada vitae nulla ut molestie",
    " Suspendisse et mattis ligula, vel suscipit libero",
    " Interdum et malesuada fames ac ante ipsum primis in faucibus",
    "Nulla aliquam, leo a ultricies varius, sapien neque cursus massa, sit amet mattis quam nisi et arcu",
    " Sed ut risus non purus congue tempus",
    " Maecenas porttitor ipsum enim, ac sagittis nulla tincidunt at",
    " Vivamus quis arcu ac nisi pellentesque hendrerit a nec ex",
    " Aenean ac suscipit ipsum",
    " Aliquam porttitor lorem quis est mollis, sollicitudin rutrum erat finibus",
    " Vestibulum at neque eu felis auctor feugiat",
    " Donec vel neque ut nulla accumsan varius",
    " Maecenas fringilla scelerisque dolor ut egestas",
    " Nullam a lacus leo",
    " Duis eros mauris, aliquam in aliquet in, elementum nec neque",
    " Mauris eget suscipit tellus, id mollis quam",
    " Vestibulum non elit turpis",
    "Morbi congue sodales felis, nec lacinia nibh euismod a",
    " Mauris pulvinar enim felis, at molestie arcu accumsan ut",
    " Quisque interdum lacus ut efficitur convallis",
    " Maecenas lobortis justo ultrices sapien porttitor, a mollis diam mollis",
    " Suspendisse nec placerat nisi, elementum consectetur mi",
    " Nam hendrerit nunc ac pharetra venenatis",
    " Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos",
    " Integer aliquet laoreet arcu ut ullamcorper",
    " Curabitur bibendum leo et magna mollis auctor",
    " Etiam odio odio, consectetur maximus ante eu, tristique vulputate nisl",
    "Proin at eleifend diam, eget condimentum velit",
    " Vivamus sit amet erat velit"," In pretium sollicitudin velit, in aliquet nulla tincidunt id",
    " Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas",
    " Proin eu interdum urna, vitae hendrerit mi",
    " Donec commodo lorem ac bibendum vulputate",
    " Fusce vel pharetra lacus, a laoreet arcu",
    " In quis orci dignissim, vulputate eros et, imperdiet magna",
    " In commodo sit amet lorem commodo iaculis",
    " Quisque vel scelerisque arcu",
    " Cras augue dui, pulvinar vitae tellus a, sodales molestie dolor",
    " Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus",
    " Vestibulum quis gravida urna","Vivamus aliquam erat justo, non pulvinar nunc sodales sit amet",
    " Sed eu sagittis tortor",
    " Phasellus a imperdiet nisi, id vulputate lorem",
    " Aliquam ex ligula, condimentum nec lacus ultrices, feugiat tristique dolor",
    " In pulvinar arcu nec lorem condimentum semper"," Nulla eu pretium purus",
    " Nulla eget metus justo"," Fusce fringilla arcu vel lorem eleifend, a tincidunt odio tincidunt",
    " Curabitur posuere fermentum tellus non semper","Pellentesque posuere lacinia eros, sed consequat lacus sodales vitae",
    " Nulla facilisi"," Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus",
    " Vivamus porttitor finibus lacus eu lobortis"," Sed in viverra tortor, non congue tortor",
    " Aenean eget odio sed felis rhoncus euismod"," Ut ipsum risus, molestie ut hendrerit nec, dictum eu nisl",
    " Aenean aliquam commodo turpis, eget euismod justo luctus nec","Pellentesque malesuada consequat tortor sit amet consequat",
    " Etiam facilisis dui consectetur dolor pretium, eu vehicula felis convallis"," Aliquam erat volutpat",
    " Vivamus luctus dui eu auctor consectetur"," Ut iaculis tellus non consectetur luctus",
    " Nulla ornare ultrices ex"," Aenean diam nisl, gravida eu dolor in, sodales elementum leo",
    " In hac habitasse platea dictumst"," Aenean aliquam aliquam purus, nec rutrum orci accumsan sit amet",
    "Ut tristique mattis lobortis"," Suspendisse eu justo vel neque egestas fringilla sed eget sapien",
    " Suspendisse dui dui, venenatis vel ultricies quis, condimentum non enim"," In pellentesque est in rutrum euismod",
    " Sed id aliquet nunc"," Aliquam at nibh ut leo facilisis cursus ut sit amet metus",
    " Aliquam eget lacus nec purus finibus posuere nec in est"," Suspendisse potenti",
    " Nullam ultrices a turpis at fringilla"," Donec non tellus risus"," Donec blandit turpis vel tristique scelerisque",
    " Interdum et malesuada fames ac ante ipsum primis in faucibus",
    " Suspendisse imperdiet, urna quis ultricies faucibus, risus sapien aliquet nibh, eget scelerisque est nisl et dui",
    " Duis eu massa ut enim euismod lobortis"," Nulla felis ex, consequat ut volutpat vel, efficitur convallis urna",
    " Fusce libero ipsum, vulputate porttitor vestibulum non, volutpat tempor nisi",
    "Suspendisse blandit molestie erat, sed hendrerit turpis semper et"," Ut id iaculis lorem",
    " Fusce mattis lacinia felis, a interdum nibh interdum ut",
    " Proin libero est, gravida non placerat non, viverra sed mauris",
    " In hac habitasse platea dictumst",
    " Quisque tincidunt, odio ut sollicitudin pellentesque, sapien est sodales magna, nec feugiat lacus lorem tristique nisi",
    " Nulla facilisi"," In egestas tortor mauris, eget pharetra diam feugiat sit amet",
    " Phasellus tempus sit amet nibh vel molestie"," Sed a nunc eget ante tempus pulvinar",
    " Quisque est est, semper ac erat fringilla, ullamcorper accumsan mauris",
    " Vivamus nulla arcu, interdum auctor ullamcorper pulvinar, cursus ultrices ipsum",
    " Sed molestie vel ligula id ullamcorper","Morbi placerat sagittis lorem, tincidunt pharetra ipsum blandit vitae",
    " Ut eget tellus viverra, hendrerit ipsum ut, pharetra elit"," Fusce nulla eros, facilisis ac nulla quis, mattis sodales felis",
    " In hac habitasse platea dictumst"," In a dui eget urna molestie tristique",
    " Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus",
    " Morbi lacus tellus, gravida non bibendum eget, ornare a felis","Donec auctor feugiat ex id efficitur",
    " Aenean ac nunc vehicula, ullamcorper orci a, dignissim metus",
    " Mauris sit amet eros eget massa pharetra laoreet et id magna",
    " Donec lobortis, sapien ut semper malesuada, metus nisi lacinia quam, vitae placerat lacus velit sit amet mi",
    " Nam et volutpat erat"," Ut maximus pretium finibus"," Proin cursus lacinia pharetra"," Nunc ultrices in erat vel vestibulum",
    " Nam aliquam nibh lacus, in rhoncus mi egestas quis",
    " Curabitur consectetur magna vestibulum, vulputate felis ornare, gravida diam"," Nulla facilisi",
    " Suspendisse gravida semper tellus, eget laoreet orci"," Donec eleifend pharetra eros at vehicula",
    "Donec id sem sit amet eros lacinia pharetra eu quis eros"," Donec ut ante nunc",
    " Aenean mi nisl, condimentum eget porta quis, cursus vitae justo"," In ut nulla sagittis, tristique mi at, consequat sapien",
    " Vivamus egestas sem ut ligula tempus, id tristique velit convallis",
    " Praesent ultricies mollis neque, sed dignissim lectus cursus eget"," In vel semper nunc"," Suspendisse potenti",
    "Mauris ut turpis ac neque convallis pulvinar"," Integer et tincidunt tellus",
    " Vestibulum lobortis nibh lorem, a auctor risus cursus eu"," Fusce gravida molestie mi",
    " Quisque consectetur dui id tellus ullamcorper finibus"," Cras a feugiat sem"," Fusce venenatis euismod ullamcorper",
    " Pellentesque feugiat, sem eget viverra posuere, lectus magna egestas dui, vitae iaculis metus neque in purus",
    "Donec elementum elementum eros, in maximus nibh tincidunt vitae"," Nulla facilisi"," Donec in lorem nulla",
    " Sed porta maximus turpis, quis lobortis turpis maximus et"," Sed fermentum purus quis laoreet placerat",
    " Aenean ultricies quam tellus"," Vivamus varius sapien nulla, ut ultricies augue tempus tincidunt",
    " Ut porttitor dui ac nisl placerat rhoncus"," Phasellus hendrerit ornare tincidunt",
    " Nunc congue nisl felis, hendrerit sagittis quam ultrices a",
    " Aliquam leo tellus, dignissim sit amet libero non, molestie malesuada dui"," Sed eu venenatis eros, a imperdiet felis",
    " Nulla fermentum nibh nibh, quis laoreet nunc consequat eu","Nulla tincidunt sagittis mattis",
    " Aliquam consectetur dapibus porta"," Nulla id justo bibendum, iaculis tortor quis, tempus sem",
    " Etiam sit amet tellus consequat, ultricies nulla et, lacinia arcu"," Mauris elementum vel purus in facilisis",
    " Proin vulputate rutrum lorem non sollicitudin"," Pellentesque hendrerit dui et dolor dictum commodo",
    " Phasellus sem nisi, lobortis vehicula diam at, volutpat gravida nisl",
    " Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Praesent sit amet congue turpis, congue varius erat",
    " Nullam lacus libero, euismod non libero in, condimentum venenatis lectus",
    " Praesent malesuada, mi vel imperdiet maximus, nisl orci aliquam augue, cursus efficitur odio ipsum id felis",
    " Pellentesque at ipsum diam"," Donec ultrices est tortor, id efficitur lectus maximus feugiat",
    " Aliquam quis lobortis orci","Integer vitae commodo mi, et hendrerit nisl"," Suspendisse ac rhoncus lorem",
    " Morbi a posuere neque, non imperdiet neque"," Nulla vel porttitor magna, in porta erat",
    " Etiam ut euismod lectus"," Maecenas suscipit tellus in cursus pretium",
    " Vivamus fermentum libero ac quam convallis, eu imperdiet augue hendrerit","Fusce sodales ultricies ligula sit amet tempor",
    " In felis ipsum, placerat nec mollis nec, gravida non tellus"," In et egestas arcu"," Pellentesque vitae metus sit amet justo mollis porttitor",
    " Cras sed urna ac purus laoreet gravida ac vel augue"," Praesent laoreet pulvinar leo, ac mattis metus pharetra sit amet"
]
codesText2 = [
    "var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {",
    "  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.",
    "",
    "  /* istanbul ignore next */",
    "",
    "  if (true) {",
    "    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7356)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),",
    "\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?",
    "\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),",
    "\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));","  } else {}","})(this, function ErrorStackParser(StackFrame) {","  'use strict';","","  var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)S+:d+/;","  var CHROME_IE_STACK_REGEXP = /^s*at .*(S+:d+|(native))/m;","  var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?([native code])?$/;","  return {","    /**","     * Given an Error object, extract the most information from it.","     *","     * @param {Error} error object","     * @return {Array} of StackFrames","     */","    parse: function ErrorStackParser$$parse(error) {","      if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {","        return this.parseOpera(error);","      } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {","        return this.parseV8OrIE(error);","      } else if (error.stack) {","        return this.parseFFOrSafari(error);","      } else {","        throw new Error('Cannot parse given Error object');","      }","    },","    // Separate line and column numbers from a string of the form: (URI:Line:Column)","    extractLocation: function ErrorStackParser$$extractLocation(urlLike) {","      // Fail-fast but return locations like \"(native)\"","      if (urlLike.indexOf(':') === -1) {","        return [urlLike];","      }","","      var regExp = /(.+?)(?::(d+))?(?::(d+))?$/;","      var parts = regExp.exec(urlLike.replace(/[()]/g, ''));","      return [parts[1], parts[2] || undefined, parts[3] || undefined];","    },","    parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {","      var filtered = error.stack.split('","').filter(function (line) {","        return !!line.match(CHROME_IE_STACK_REGEXP);","      }, this);","      return filtered.map(function (line) {","        if (line.indexOf('(eval ') > -1) {","          // Throw away eval information until we implement stacktrace.js/stackframe#8","          line = line.replace(/eval code/g, 'eval').replace(/((eval at [^()]*)|(),.*$)/g, '');","        }","","        var sanitizedLine = line.replace(/^s+/, '').replace(/(eval code/g, '('); // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in","        // case it has spaces in it, as the string is split on s+ later on","","        var location = sanitizedLine.match(/ (((.+):(d+):(d+))$)/); // remove the parenthesized location from the line, if it was matched","","        sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;","        var tokens = sanitizedLine.split(/s+/).slice(1); // if a location was matched, pass it to extractLocation() otherwise pop the last token","","        var locationParts = this.extractLocation(location ? location[1] : tokens.pop());","        var functionName = tokens.join(' ') || undefined;","        var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];","        return new StackFrame({","          functionName: functionName,","          fileName: fileName,","          lineNumber: locationParts[1],","          columnNumber: locationParts[2],","          source: line","        });","      }, this);","    },","    parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {","      var filtered = error.stack.split('","').filter(function (line) {","        return !line.match(SAFARI_NATIVE_CODE_REGEXP);","      }, this);","      return filtered.map(function (line) {","        // Throw away eval information until we implement stacktrace.js/stackframe#8","        if (line.indexOf(' > eval') > -1) {","          line = line.replace(/ line (d+)(?: > eval line d+)* > eval:d+:d+/g, ':$1');","        }","","        if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {","          // Safari eval frames only have function names and nothing else","          return new StackFrame({","            functionName: line","          });","        } else {","          var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;","          var matches = line.match(functionNameRegex);","          var functionName = matches && matches[1] ? matches[1] : undefined;","          var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));","          return new StackFrame({","            functionName: functionName,","            fileName: locationParts[0],","            lineNumber: locationParts[1],","            columnNumber: locationParts[2],","            source: line","          });","        }","      }, this);","    },","    parseOpera: function ErrorStackParser$$parseOpera(e) {","      if (!e.stacktrace || e.message.indexOf('","') > -1 && e.message.split('","').length > e.stacktrace.split('","').length) {","        return this.parseOpera9(e);","      } else if (!e.stack) {","        return this.parseOpera10(e);","      } else {","        return this.parseOpera11(e);","      }","    },","    parseOpera9: function ErrorStackParser$$parseOpera9(e) {","      var lineRE = /Line (d+).*script (?:in )?(S+)/i;","      var lines = e.message.split('","');","      var result = [];","","      for (var i = 2, len = lines.length; i < len; i += 2) {","        var match = lineRE.exec(lines[i]);","","        if (match) {","          result.push(new StackFrame({","            fileName: match[2],","            lineNumber: match[1],","            source: lines[i]","          }));","        }","      }","","      return result;","    },","    parseOpera10: function ErrorStackParser$$parseOpera10(e) {","      var lineRE = /Line (d+).*script (?:in )?(S+)(?:: In function (S+))?$/i;","      var lines = e.stacktrace.split('","');","      var result = [];","","      for (var i = 0, len = lines.length; i < len; i += 2) {","        var match = lineRE.exec(lines[i]);","","        if (match) {","          result.push(new StackFrame({","            functionName: match[3] || undefined,","            fileName: match[2],","            lineNumber: match[1],","            source: lines[i]","          }));","        }","      }","","      return result;","    },","    // Opera 10.65+ Error.stack very similar to FF/Safari","    parseOpera11: function ErrorStackParser$$parseOpera11(error) {","      var filtered = error.stack.split('","').filter(function (line) {","        return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);","      }, this);","      return filtered.map(function (line) {","        var tokens = line.split('@');","        var locationParts = this.extractLocation(tokens.pop());","        var functionCall = tokens.shift() || '';","        var functionName = functionCall.replace(/<anonymous function(: (w+))?>/, '$2').replace(/([^)]*)/g, '') || undefined;","        var argsRaw;","","        if (functionCall.match(/(([^)]*))/)) {","          argsRaw = functionCall.replace(/^[^(]+(([^)]*))$/, '$1');","        }","","        var args = argsRaw === undefined || argsRaw === '[arguments not available]' ? undefined : argsRaw.split(',');","        return new StackFrame({","          functionName: functionName,","          args: args,","          fileName: locationParts[0],","          lineNumber: locationParts[1],","          columnNumber: locationParts[2],","          source: line","        });","      }, this);","    }","  };","});","","/***/ }),","","/***/ 3018:","/***/ ((module, __unused_webpack_exports, __webpack_require__) => {","","\"use strict\";","/* provided dependency */ var process = __webpack_require__(397);","","","module.exports = LRUCache; // This will be a proper iterable 'Map' in engines that support it,","// or a fakey-fake PseudoMap in older versions.","","var Map = __webpack_require__(7745);","","var util = __webpack_require__(2599); // A linked list to keep track of recently-used-ness","","","var Yallist = __webpack_require__(5986); // use symbols if possible, otherwise just _props","","","var hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1';","var makeSymbol;","","if (hasSymbol) {","  makeSymbol = function (key) {","    return Symbol(key);","  };","} else {","  makeSymbol = function (key) {","    return '_' + key;","  };","}","","var MAX = makeSymbol('max');","var LENGTH = makeSymbol('length');","var LENGTH_CALCULATOR = makeSymbol('lengthCalculator');","var ALLOW_STALE = makeSymbol('allowStale');","var MAX_AGE = makeSymbol('maxAge');","var DISPOSE = makeSymbol('dispose');","var NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet');","var LRU_LIST = makeSymbol('lruList');","var CACHE = makeSymbol('cache');","","function naiveLength() {","  return 1;","} // lruList is a yallist where the head is the youngest","// item, and the tail is the oldest.  the list contains the Hit","// objects as the entries.","// Each Hit object has a reference to its Yallist.Node.  This","// never changes.","//","// cache is a Map (or PseudoMap) that matches the keys to","// the Yallist.Node object.","","","function LRUCache(options) {","  if (!(this instanceof LRUCache)) {","    return new LRUCache(options);","  }","","  if (typeof options === 'number') {","    options = {","      max: options","    };","  }","","  if (!options) {","    options = {};","  }","","  var max = this[MAX] = options.max; // Kind of weird to have a default max of Infinity, but oh well.","","  if (!max || !(typeof max === 'number') || max <= 0) {","    this[MAX] = Infinity;","  }","","  var lc = options.length || naiveLength;","","  if (typeof lc !== 'function') {","    lc = naiveLength;","  }","","  this[LENGTH_CALCULATOR] = lc;","  this[ALLOW_STALE] = options.stale || false;","  this[MAX_AGE] = options.maxAge || 0;","  this[DISPOSE] = options.dispose;","  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;","  this.reset();","} // resize the cache when the max changes.","","","Object.defineProperty(LRUCache.prototype, 'max', {","  set: function (mL) {","    if (!mL || !(typeof mL === 'number') || mL <= 0) {","      mL = Infinity;","    }","","    this[MAX] = mL;","    trim(this);","  },","  get: function () {","    return this[MAX];","  },","  enumerable: true","});","Object.defineProperty(LRUCache.prototype, 'allowStale', {","  set: function (allowStale) {","    this[ALLOW_STALE] = !!allowStale;","  },","  get: function () {","    return this[ALLOW_STALE];","  },","  enumerable: true","});","Object.defineProperty(LRUCache.prototype, 'maxAge', {","  set: function (mA) {","    if (!mA || !(typeof mA === 'number') || mA < 0) {","      mA = 0;","    }","","    this[MAX_AGE] = mA;","    trim(this);","  },","  get: function () {","    return this[MAX_AGE];","  },","  enumerable: true","}); // resize the cache when the lengthCalculator changes.","","Object.defineProperty(LRUCache.prototype, 'lengthCalculator', {","  set: function (lC) {","    if (typeof lC !== 'function') {","      lC = naiveLength;","    }","","    if (lC !== this[LENGTH_CALCULATOR]) {","      this[LENGTH_CALCULATOR] = lC;","      this[LENGTH] = 0;","      this[LRU_LIST].forEach(function (hit) {","        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);","        this[LENGTH] += hit.length;","      }, this);","    }","","    trim(this);","  },","  get: function () {","    return this[LENGTH_CALCULATOR];","  },","  enumerable: true","});","Object.defineProperty(LRUCache.prototype, 'length', {","  get: function () {","    return this[LENGTH];","  },","  enumerable: true","});","Object.defineProperty(LRUCache.prototype, 'itemCount', {","  get: function () {","    return this[LRU_LIST].length;","  },","  enumerable: true","});","","LRUCache.prototype.rforEach = function (fn, thisp) {","  thisp = thisp || this;","","  for (var walker = this[LRU_LIST].tail; walker !== null;) {","    var prev = walker.prev;","    forEachStep(this, fn, walker, thisp);","    walker = prev;","  }","};","","function forEachStep(self, fn, node, thisp) {","  var hit = node.value;","","  if (isStale(self, hit)) {","    del(self, node);","","    if (!self[ALLOW_STALE]) {","      hit = undefined;","    }","  }","","  if (hit) {","    fn.call(thisp, hit.value, hit.key, self);","  }","}","","LRUCache.prototype.forEach = function (fn, thisp) {","  thisp = thisp || this;","","  for (var walker = this[LRU_LIST].head; walker !== null;) {","    var next = walker.next;","    forEachStep(this, fn, walker, thisp);","    walker = next;","  }","};","","LRUCache.prototype.keys = function () {","  return this[LRU_LIST].toArray().map(function (k) {","    return k.key;","  }, this);","};","","LRUCache.prototype.values = function () {","  return this[LRU_LIST].toArray().map(function (k) {","    return k.value;","  }, this);","};","","LRUCache.prototype.reset = function () {","  if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {","    this[LRU_LIST].forEach(function (hit) {","      this[DISPOSE](hit.key, hit.value);","    }, this);","  }","","  this[CACHE] = new Map(); // hash of items by key","","  this[LRU_LIST] = new Yallist(); // list of items in order of use recency","","  this[LENGTH] = 0; // length of items in the list","};","","LRUCache.prototype.dump = function () {","  return this[LRU_LIST].map(function (hit) {","    if (!isStale(this, hit)) {","      return {","        k: hit.key,","        v: hit.value,","        e: hit.now + (hit.maxAge || 0)","      };","    }","  }, this).toArray().filter(function (h) {","    return h;","  });","};","","LRUCache.prototype.dumpLru = function () {","  return this[LRU_LIST];","};","/* istanbul ignore next */","","","LRUCache.prototype.inspect = function (n, opts) {","  var str = 'LRUCache {';","  var extras = false;","  var as = this[ALLOW_STALE];","","  if (as) {","    str += '","  allowStale: true';","    extras = true;","  }","","  var max = this[MAX];","","  if (max && max !== Infinity) {","    if (extras) {","      str += ',';","    }","","    str += '","  max: ' + util.inspect(max, opts);","    extras = true;","  }","","  var maxAge = this[MAX_AGE];","","  if (maxAge) {","    if (extras) {","      str += ',';","    }","","    str += '","  maxAge: ' + util.inspect(maxAge, opts);","    extras = true;","  }","","  var lc = this[LENGTH_CALCULATOR];","","  if (lc && lc !== naiveLength) {","    if (extras) {","      str += ',';","    }","","    str += '","  length: ' + util.inspect(this[LENGTH], opts);","    extras = true;","  }","","  var didFirst = false;","  this[LRU_LIST].forEach(function (item) {","    if (didFirst) {","      str += ',","  ';","    } else {","      if (extras) {","        str += ',","';","      }","","      didFirst = true;","      str += '","  ';","    }","","    var key = util.inspect(item.key).split('","').join('","  ');","    var val = {","      value: item.value","    };","","    if (item.maxAge !== maxAge) {","      val.maxAge = item.maxAge;","    }","","    if (lc !== naiveLength) {","      val.length = item.length;","    }","","    if (isStale(this, item)) {","      val.stale = true;","    }","","    val = util.inspect(val, opts).split('","').join('","  ');","    str += key + ' => ' + val;","  });","","  if (didFirst || extras) {","    str += '","';","  }","","  str += '}';","  return str;","};","","LRUCache.prototype.set = function (key, value, maxAge) {","  maxAge = maxAge || this[MAX_AGE];","  var now = maxAge ? Date.now() : 0;","  var len = this[LENGTH_CALCULATOR](value, key);","","  if (this[CACHE].has(key)) {","    if (len > this[MAX]) {","      del(this, this[CACHE].get(key));","      return false;","    }","","    var node = this[CACHE].get(key);","    var item = node.value; // dispose of the old one before overwriting","    // split out into 2 ifs for better coverage tracking","","    if (this[DISPOSE]) {","      if (!this[NO_DISPOSE_ON_SET]) {","        this[DISPOSE](key, item.value);","      }","    }","","    item.now = now;","    item.maxAge = maxAge;","    item.value = value;","    this[LENGTH] += len - item.length;","    item.length = len;","    this.get(key);","    trim(this);","    return true;","  }","","  var hit = new Entry(key, value, len, now, maxAge); // oversized objects fall out of cache automatically.","","  if (hit.length > this[MAX]) {","    if (this[DISPOSE]) {","      this[DISPOSE](key, value);","    }","","    return false;","  }","","  this[LENGTH] += hit.length;","  this[LRU_LIST].unshift(hit);","  this[CACHE].set(key, this[LRU_LIST].head);","  trim(this);","  return true;","};","","LRUCache.prototype.has = function (key) {","  if (!this[CACHE].has(key)) return false;","  var hit = this[CACHE].get(key).value;","","  if (isStale(this, hit)) {","    return false;","  }","","  return true;","};","","LRUCache.prototype.get = function (key) {","  return get(this, key, true);","};","","LRUCache.prototype.peek = function (key) {","  return get(this, key, false);","};","","LRUCache.prototype.pop = function () {","  var node = this[LRU_LIST].tail;","  if (!node) return null;","  del(this, node);","  return node.value;","};","","LRUCache.prototype.del = function (key) {","  del(this, this[CACHE].get(key));","};","","LRUCache.prototype.load = function (arr) {","  // reset the cache","  this.reset();","  var now = Date.now(); // A previous serialized cache has the most recent items first","","  for (var l = arr.length - 1; l >= 0; l--) {","    var hit = arr[l];","    var expiresAt = hit.e || 0;","","    if (expiresAt === 0) {","      // the item was created without expiration in a non aged cache","      this.set(hit.k, hit.v);","    } else {","      var maxAge = expiresAt - now; // dont add already expired items","","      if (maxAge > 0) {","        this.set(hit.k, hit.v, maxAge);","      }","    }","  }","};"
]
